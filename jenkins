pipeline {
  agent any
  stages {
    stage("Clear Workspace"){
        steps {
          sh 'rm -rvf p*'
        }
    }
    stage("Checkout") {
        steps {
        sh 'git clone https://github.com/prabhakarvarma1218/project3.git'
      }
    }
    stage('GCP Auth') {
        steps {
         withCredentials([usernameColonPassword(credentialsId: '19986308-c995-4a64-be40-c4f2288c379c', variable: 'GCP_CREDENTIALS'), file(credentialsId: '42816706-8503-4ae3-a236-0a17b7fc04ea', variable: 'GCP_CREDENTIALS')]) {
         sh 'gcloud auth activate-service-account --key-file=$GCP_CREDENTIALS'
        }
      }
    }
    stage("Docker pull") {
      steps {
        withCredentials([usernameColonPassword(credentialsId: '39986bbb-5ad2-449a-b592-4b5afe0c1e72', variable: 'DOCKER')]) {
        sh 'docker login -u prabhakarvarma1218 -p moksha@1218'
        sh 'docker pull prabhakarvarma1218/talendhub:tagupdated'
       }
     }
    }
    stage("Docker tag") {
      steps {     
         sh 'docker tag prabhakarvarma1218/talendhub:tagupdated gcr.io/ajay-409305/talend:gcp'
      }
    }
    stage("Docker push") { 
        steps {
             sh 'gcloud auth configure-docker'
             sh 'docker push gcr.io/model-argon-389809/spark:test2'
             sh 'docker push gcr.io/model-argon-389809/talented:tag2'
           }
        }
     stage("cluster create") {
       steps {
          sh 'gcloud container clusters create spark-cluster --num-nodes 3 --location=asia-east1-a'
       }
     }
    stage("Create & expose deploy") {
       steps {
         sh 'kubectl create deployment datawarehouse-spark --image=gcr.io/model-argon-389809/spark:test2'
         sh 'kubectl create deployment datawarehouse-talend --image=gcr.io/model-argon-389809/talented:tag2'
         sh 'kubectl expose deployment datawarehouse-spark --type=LoadBalancer --port 80 --target-port 8080'
       }
    }
  }  
} 
